---
const menuItems = [
  { label: 'Projects', href: '#projects' },
  { label: 'Writing', href: '#writing' },
  { label: 'About', href: '#about' }
];
---

<div class="fixed top-0 left-0 right-0 z-50 px-6 py-4 backdrop-blur-sm bg-[#13151a]/50">
  <div class="max-w-3xl mx-auto flex justify-between items-center">
    <!-- Peace sign home button -->
    <a href="#" class="text-2xl hover:opacity-80 transition-opacity">✌️</a>

    <!-- Desktop Navigation -->
    <nav class="hidden md:flex space-x-6">
      {menuItems.map(item => (
        <a
          href={item.href}
          class="text-sm text-gray-300 hover:text-white transition-colors duration-200"
        >
          {item.label}
        </a>
      ))}
    </nav>

    <!-- Mobile Navigation -->
    <div class="md:hidden">
      <button
        id="menuButton"
        class="p-2 rounded-lg bg-white/10 hover:bg-white/20 transition-all duration-300"
        aria-label="Toggle menu"
      >
        <svg
          class="w-6 h-6"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M4 6h16M4 12h16M4 18h16"
          />
        </svg>
      </button>

      <nav
        id="mobileMenu"
        class="absolute right-4 top-16 w-48 py-2 bg-white/10 backdrop-blur-sm rounded-lg shadow-xl transform scale-0 opacity-0 transition-all duration-200 origin-top-right"
      >
        {menuItems.map(item => (
          <a
            href={item.href}
            class="block px-4 py-2 text-sm hover:bg-white/20 transition-colors duration-200"
          >
            {item.label}
          </a>
        ))}
      </nav>
    </div>
  </div>
</div>

<script>
  const menuButton = document.getElementById('menuButton');
  const mobileMenu = document.getElementById('mobileMenu');
  let isOpen = false;

  menuButton?.addEventListener('click', () => {
    isOpen = !isOpen;
    if (isOpen) {
      mobileMenu?.classList.remove('scale-0', 'opacity-0');
      mobileMenu?.classList.add('scale-100', 'opacity-100');
    } else {
      mobileMenu?.classList.remove('scale-100', 'opacity-100');
      mobileMenu?.classList.add('scale-0', 'opacity-0');
    }
  });

  // Close menu when clicking outside
  document.addEventListener('click', (event) => {
    const target = event.target as Node;
    if (!menuButton?.contains(target) && !mobileMenu?.contains(target)) {
      mobileMenu?.classList.remove('scale-100', 'opacity-100');
      mobileMenu?.classList.add('scale-0', 'opacity-0');
      isOpen = false;
    }
  });
</script>